{"version":3,"sources":["webpack:///./node_modules/event-source-polyfill/src/eventsource.js"],"names":["__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","global","setTimeout","clearTimeout","XMLHttpRequest","XDomainRequest","NativeEventSource","EventSource","document","Promise","fetch","Response","TextDecoder","TextEncoder","AbortController","undefined","Object","create","C","F","prototype","callback","this","then","result","resolve","error","originalFetch","url","options","TextDecoderPolyfill","bitsNeeded","codePoint","signal","abort","decode","octets","valid","shift","octetsCount","Error","REPLACER","string","i","length","octet","String","fromCharCode","supportsStreamOption","encode","stream","console","log","k","XHRWrapper","xhr","withCredentials","responseType","readyState","status","statusText","responseText","onprogress","onreadystatechange","_contentType","_xhr","_sendTimeout","_abort","toLowerCase","name","replace","c","charCodeAt","HeadersPolyfill","all","map","array","split","line","parts","value","join","_map","XHRTransport","HeadersWrapper","headers","_headers","FetchTransport","EventTarget","_listeners","throwError","e","Event","type","target","MessageEvent","call","data","lastEventId","ConnectionEvent","open","method","that","state","timeout","silent","onload","onerror","onabort","onStart","contentType","getResponseHeader","onProgress","onFinish","onReadyStateChange","onTimeout","indexOf","setRequestHeader","getAllResponseHeaders","send","error1","get","onStartCallback","onProgressCallback","onFinishCallback","offset","chunk","slice","hasOwnProperty","controller","textDecoder","credentials","cache","response","reader","body","getReader","cancel","reject","readNextChunk","read","done","dispatchEvent","event","typeListeners","listener","handleEvent","addEventListener","listeners","found","push","removeEventListener","filtered","WAITING","CONNECTING","OPEN","CLOSED","AFTER_CR","FIELD_START","FIELD","VALUE_START","VALUE","contentTypeRegExp","MINIMUM_DURATION","MAXIMUM_DURATION","parseDuration","def","n","parseInt","clampDuration","Math","min","max","fire","f","EventSourcePolyfill","onopen","onmessage","_close","start","getBestTransport","isFetchSupported","es","Boolean","initialRetry","heartbeatTimeout","retry","wasActivity","JSON","parse","stringify","CurrentTransport","Transport","transport","cancelFunction","currentState","dataBuffer","lastEventIdBuffer","eventTypeBuffer","textBuffer","fieldStart","valueStart","test","message","close","textChunk","position","field","requestURL","encodeURIComponent","requestHeaders","Accept","factory","module","exports","v","apply","window"],"mappings":"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","file":"assets/js/event-source-polyfill.560960a1.js","sourcesContent":["/** @license\r\n * eventsource.js\r\n * Available under MIT License (MIT)\r\n * https://github.com/Yaffle/EventSource/\r\n */\r\n\r\n/*jslint indent: 2, vars: true, plusplus: true */\r\n/*global setTimeout, clearTimeout */\r\n\r\n(function (global) {\r\n  \"use strict\";\r\n\r\n  var setTimeout = global.setTimeout;\r\n  var clearTimeout = global.clearTimeout;\r\n  var XMLHttpRequest = global.XMLHttpRequest;\r\n  var XDomainRequest = global.XDomainRequest;\r\n  var NativeEventSource = global.EventSource;\r\n  var document = global.document;\r\n  var Promise = global.Promise;\r\n  var fetch = global.fetch;\r\n  var Response = global.Response;\r\n  var TextDecoder = global.TextDecoder;\r\n  var TextEncoder = global.TextEncoder;\r\n  var AbortController = global.AbortController;\r\n\r\n  if (Object.create == undefined) {\r\n    Object.create = function (C) {\r\n      function F(){}\r\n      F.prototype = C;\r\n      return new F();\r\n    };\r\n  }\r\n\r\n  // ?\r\n  if (Promise != undefined && Promise.prototype[\"finally\"] == undefined) {\r\n    Promise.prototype[\"finally\"] = function (callback) {\r\n      return this.then(function (result) {\r\n        return Promise.resolve(callback()).then(function () {\r\n          return result;\r\n        });\r\n      }, function (error) {\r\n        return Promise.resolve(callback()).then(function () {\r\n          throw error;\r\n        });\r\n      });\r\n    };\r\n  }\r\n\r\n  // see #118, #123, #125\r\n  if (fetch != undefined && true) {\r\n    var originalFetch = fetch;\r\n    fetch = function (url, options) {\r\n      return Promise.resolve(originalFetch(url, options));\r\n    };\r\n  }\r\n\r\n  if (AbortController == undefined) {\r\n    AbortController = function () {\r\n      this.signal = null;\r\n      this.abort = function () {\r\n      };\r\n    };\r\n  }\r\n\r\n  function TextDecoderPolyfill() {\r\n    this.bitsNeeded = 0;\r\n    this.codePoint = 0;\r\n  }\r\n\r\n  TextDecoderPolyfill.prototype.decode = function (octets) {\r\n    function valid(codePoint, shift, octetsCount) {\r\n      if (octetsCount === 1) {\r\n        return codePoint >= 0x0080 >> shift && codePoint << shift <= 0x07FF;\r\n      }\r\n      if (octetsCount === 2) {\r\n        return codePoint >= 0x0800 >> shift && codePoint << shift <= 0xD7FF || codePoint >= 0xE000 >> shift && codePoint << shift <= 0xFFFF;\r\n      }\r\n      if (octetsCount === 3) {\r\n        return codePoint >= 0x010000 >> shift && codePoint << shift <= 0x10FFFF;\r\n      }\r\n      throw new Error();\r\n    }\r\n    function octetsCount(bitsNeeded, codePoint) {\r\n      if (bitsNeeded === 6 * 1) {\r\n        return codePoint >> 6 > 15 ? 3 : codePoint > 31 ? 2 : 1;\r\n      }\r\n      if (bitsNeeded === 6 * 2) {\r\n        return codePoint > 15 ? 3 : 2;\r\n      }\r\n      if (bitsNeeded === 6 * 3) {\r\n        return 3;\r\n      }\r\n      throw new Error();\r\n    }\r\n    var REPLACER = 0xFFFD;\r\n    var string = \"\";\r\n    var bitsNeeded = this.bitsNeeded;\r\n    var codePoint = this.codePoint;\r\n    for (var i = 0; i < octets.length; i += 1) {\r\n      var octet = octets[i];\r\n      if (bitsNeeded !== 0) {\r\n        if (octet < 128 || octet > 191 || !valid(codePoint << 6 | octet & 63, bitsNeeded - 6, octetsCount(bitsNeeded, codePoint))) {\r\n          bitsNeeded = 0;\r\n          codePoint = REPLACER;\r\n          string += String.fromCharCode(codePoint);\r\n        }\r\n      }\r\n      if (bitsNeeded === 0) {\r\n        if (octet >= 0 && octet <= 127) {\r\n          bitsNeeded = 0;\r\n          codePoint = octet;\r\n        } else if (octet >= 192 && octet <= 223) {\r\n          bitsNeeded = 6 * 1;\r\n          codePoint = octet & 31;\r\n        } else if (octet >= 224 && octet <= 239) {\r\n          bitsNeeded = 6 * 2;\r\n          codePoint = octet & 15;\r\n        } else if (octet >= 240 && octet <= 247) {\r\n          bitsNeeded = 6 * 3;\r\n          codePoint = octet & 7;\r\n        } else {\r\n          bitsNeeded = 0;\r\n          codePoint = REPLACER;\r\n        }\r\n        if (bitsNeeded !== 0 && !valid(codePoint, bitsNeeded, octetsCount(bitsNeeded, codePoint))) {\r\n          bitsNeeded = 0;\r\n          codePoint = REPLACER;\r\n        }\r\n      } else {\r\n        bitsNeeded -= 6;\r\n        codePoint = codePoint << 6 | octet & 63;\r\n      }\r\n      if (bitsNeeded === 0) {\r\n        if (codePoint <= 0xFFFF) {\r\n          string += String.fromCharCode(codePoint);\r\n        } else {\r\n          string += String.fromCharCode(0xD800 + (codePoint - 0xFFFF - 1 >> 10));\r\n          string += String.fromCharCode(0xDC00 + (codePoint - 0xFFFF - 1 & 0x3FF));\r\n        }\r\n      }\r\n    }\r\n    this.bitsNeeded = bitsNeeded;\r\n    this.codePoint = codePoint;\r\n    return string;\r\n  };\r\n\r\n  // Firefox < 38 throws an error with stream option\r\n  var supportsStreamOption = function () {\r\n    try {\r\n      return new TextDecoder().decode(new TextEncoder().encode(\"test\"), {stream: true}) === \"test\";\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n    return false;\r\n  };\r\n\r\n  // IE, Edge\r\n  if (TextDecoder == undefined || TextEncoder == undefined || !supportsStreamOption()) {\r\n    TextDecoder = TextDecoderPolyfill;\r\n  }\r\n\r\n  var k = function () {\r\n  };\r\n\r\n  function XHRWrapper(xhr) {\r\n    this.withCredentials = false;\r\n    this.responseType = \"\";\r\n    this.readyState = 0;\r\n    this.status = 0;\r\n    this.statusText = \"\";\r\n    this.responseText = \"\";\r\n    this.onprogress = k;\r\n    this.onreadystatechange = k;\r\n    this._contentType = \"\";\r\n    this._xhr = xhr;\r\n    this._sendTimeout = 0;\r\n    this._abort = k;\r\n  }\r\n\r\n  XHRWrapper.prototype.open = function (method, url) {\r\n    this._abort(true);\r\n\r\n    var that = this;\r\n    var xhr = this._xhr;\r\n    var state = 1;\r\n    var timeout = 0;\r\n\r\n    this._abort = function (silent) {\r\n      if (that._sendTimeout !== 0) {\r\n        clearTimeout(that._sendTimeout);\r\n        that._sendTimeout = 0;\r\n      }\r\n      if (state === 1 || state === 2 || state === 3) {\r\n        state = 4;\r\n        xhr.onload = k;\r\n        xhr.onerror = k;\r\n        xhr.onabort = k;\r\n        xhr.onprogress = k;\r\n        xhr.onreadystatechange = k;\r\n        // IE 8 - 9: XDomainRequest#abort() does not fire any event\r\n        // Opera < 10: XMLHttpRequest#abort() does not fire any event\r\n        xhr.abort();\r\n        if (timeout !== 0) {\r\n          clearTimeout(timeout);\r\n          timeout = 0;\r\n        }\r\n        if (!silent) {\r\n          that.readyState = 4;\r\n          that.onreadystatechange();\r\n        }\r\n      }\r\n      state = 0;\r\n    };\r\n\r\n    var onStart = function () {\r\n      if (state === 1) {\r\n        //state = 2;\r\n        var status = 0;\r\n        var statusText = \"\";\r\n        var contentType = undefined;\r\n        if (!(\"contentType\" in xhr)) {\r\n          try {\r\n            status = xhr.status;\r\n            statusText = xhr.statusText;\r\n            contentType = xhr.getResponseHeader(\"Content-Type\");\r\n          } catch (error) {\r\n            // IE < 10 throws exception for `xhr.status` when xhr.readyState === 2 || xhr.readyState === 3\r\n            // Opera < 11 throws exception for `xhr.status` when xhr.readyState === 2\r\n            // https://bugs.webkit.org/show_bug.cgi?id=29121\r\n            status = 0;\r\n            statusText = \"\";\r\n            contentType = undefined;\r\n            // Firefox < 14, Chrome ?, Safari ?\r\n            // https://bugs.webkit.org/show_bug.cgi?id=29658\r\n            // https://bugs.webkit.org/show_bug.cgi?id=77854\r\n          }\r\n        } else {\r\n          status = 200;\r\n          statusText = \"OK\";\r\n          contentType = xhr.contentType;\r\n        }\r\n        if (status !== 0) {\r\n          state = 2;\r\n          that.readyState = 2;\r\n          that.status = status;\r\n          that.statusText = statusText;\r\n          that._contentType = contentType;\r\n          that.onreadystatechange();\r\n        }\r\n      }\r\n    };\r\n    var onProgress = function () {\r\n      onStart();\r\n      if (state === 2 || state === 3) {\r\n        state = 3;\r\n        var responseText = \"\";\r\n        try {\r\n          responseText = xhr.responseText;\r\n        } catch (error) {\r\n          // IE 8 - 9 with XMLHttpRequest\r\n        }\r\n        that.readyState = 3;\r\n        that.responseText = responseText;\r\n        that.onprogress();\r\n      }\r\n    };\r\n    var onFinish = function () {\r\n      // Firefox 52 fires \"readystatechange\" (xhr.readyState === 4) without final \"readystatechange\" (xhr.readyState === 3)\r\n      // IE 8 fires \"onload\" without \"onprogress\"\r\n      onProgress();\r\n      if (state === 1 || state === 2 || state === 3) {\r\n        state = 4;\r\n        if (timeout !== 0) {\r\n          clearTimeout(timeout);\r\n          timeout = 0;\r\n        }\r\n        that.readyState = 4;\r\n        that.onreadystatechange();\r\n      }\r\n    };\r\n    var onReadyStateChange = function () {\r\n      if (xhr != undefined) { // Opera 12\r\n        if (xhr.readyState === 4) {\r\n          onFinish();\r\n        } else if (xhr.readyState === 3) {\r\n          onProgress();\r\n        } else if (xhr.readyState === 2) {\r\n          onStart();\r\n        }\r\n      }\r\n    };\r\n    var onTimeout = function () {\r\n      timeout = setTimeout(function () {\r\n        onTimeout();\r\n      }, 500);\r\n      if (xhr.readyState === 3) {\r\n        onProgress();\r\n      }\r\n    };\r\n\r\n    // XDomainRequest#abort removes onprogress, onerror, onload\r\n    xhr.onload = onFinish;\r\n    xhr.onerror = onFinish;\r\n    // improper fix to match Firefox behaviour, but it is better than just ignore abort\r\n    // see https://bugzilla.mozilla.org/show_bug.cgi?id=768596\r\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=880200\r\n    // https://code.google.com/p/chromium/issues/detail?id=153570\r\n    // IE 8 fires \"onload\" without \"onprogress\r\n    xhr.onabort = onFinish;\r\n\r\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=736723    \r\n    if (!(\"sendAsBinary\" in XMLHttpRequest.prototype) && !(\"mozAnon\" in XMLHttpRequest.prototype)) {\r\n      xhr.onprogress = onProgress;\r\n    }\r\n\r\n    // IE 8 - 9 (XMLHTTPRequest)\r\n    // Opera < 12\r\n    // Firefox < 3.5\r\n    // Firefox 3.5 - 3.6 - ? < 9.0\r\n    // onprogress is not fired sometimes or delayed\r\n    // see also #64\r\n    xhr.onreadystatechange = onReadyStateChange;\r\n\r\n    if (\"contentType\" in xhr) {\r\n      url += (url.indexOf(\"?\") === -1 ? \"?\" : \"&\") + \"padding=true\";\r\n    }\r\n    xhr.open(method, url, true);\r\n\r\n    if (\"readyState\" in xhr) {\r\n      // workaround for Opera 12 issue with \"progress\" events\r\n      // #91\r\n      timeout = setTimeout(function () {\r\n        onTimeout();\r\n      }, 0);\r\n    }\r\n  };\r\n  XHRWrapper.prototype.abort = function () {\r\n    this._abort(false);\r\n  };\r\n  XHRWrapper.prototype.getResponseHeader = function (name) {\r\n    return this._contentType;\r\n  };\r\n  XHRWrapper.prototype.setRequestHeader = function (name, value) {\r\n    var xhr = this._xhr;\r\n    if (\"setRequestHeader\" in xhr) {\r\n      xhr.setRequestHeader(name, value);\r\n    }\r\n  };\r\n  XHRWrapper.prototype.getAllResponseHeaders = function () {\r\n    return this._xhr.getAllResponseHeaders != undefined ? this._xhr.getAllResponseHeaders() : \"\";\r\n  };\r\n  XHRWrapper.prototype.send = function () {\r\n    // loading indicator in Safari < ? (6), Chrome < 14, Firefox\r\n    if (!(\"ontimeout\" in XMLHttpRequest.prototype) &&\r\n        document != undefined &&\r\n        document.readyState != undefined &&\r\n        document.readyState !== \"complete\") {\r\n      var that = this;\r\n      that._sendTimeout = setTimeout(function () {\r\n        that._sendTimeout = 0;\r\n        that.send();\r\n      }, 4);\r\n      return;\r\n    }\r\n\r\n    var xhr = this._xhr;\r\n    // withCredentials should be set after \"open\" for Safari and Chrome (< 19 ?)\r\n    xhr.withCredentials = this.withCredentials;\r\n    xhr.responseType = this.responseType;\r\n    try {\r\n      // xhr.send(); throws \"Not enough arguments\" in Firefox 3.0\r\n      xhr.send(undefined);\r\n    } catch (error1) {\r\n      // Safari 5.1.7, Opera 12\r\n      throw error1;\r\n    }\r\n  };\r\n\r\n  function toLowerCase(name) {\r\n    return name.replace(/[A-Z]/g, function (c) {\r\n      return String.fromCharCode(c.charCodeAt(0) + 0x20);\r\n    });\r\n  }\r\n\r\n  function HeadersPolyfill(all) {\r\n    // Get headers: implemented according to mozilla's example code: https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/getAllResponseHeaders#Example\r\n    var map = Object.create(null);\r\n    var array = all.split(\"\\r\\n\");\r\n    for (var i = 0; i < array.length; i += 1) {\r\n      var line = array[i];\r\n      var parts = line.split(\": \");\r\n      var name = parts.shift();\r\n      var value = parts.join(\": \");\r\n      map[toLowerCase(name)] = value;\r\n    }\r\n    this._map = map;\r\n  }\r\n  HeadersPolyfill.prototype.get = function (name) {\r\n    return this._map[toLowerCase(name)];\r\n  };\r\n\r\n  function XHRTransport() {\r\n  }\r\n\r\n  XHRTransport.prototype.open = function (xhr, onStartCallback, onProgressCallback, onFinishCallback, url, withCredentials, headers) {\r\n    xhr.open(\"GET\", url);\r\n    var offset = 0;\r\n    xhr.onprogress = function () {\r\n      var responseText = xhr.responseText;\r\n      var chunk = responseText.slice(offset);\r\n      offset += chunk.length;\r\n      onProgressCallback(chunk);\r\n    };\r\n    xhr.onreadystatechange = function () {\r\n      if (xhr.readyState === 2) {\r\n        var status = xhr.status;\r\n        var statusText = xhr.statusText;\r\n        var contentType = xhr.getResponseHeader(\"Content-Type\");\r\n        var headers = xhr.getAllResponseHeaders();\r\n        onStartCallback(status, statusText, contentType, new HeadersPolyfill(headers), function () {\r\n          xhr.abort();\r\n        });\r\n      } else if (xhr.readyState === 4) {\r\n        onFinishCallback();\r\n      }\r\n    };\r\n    xhr.withCredentials = withCredentials;\r\n    xhr.responseType = \"text\";\r\n    for (var name in headers) {\r\n      if (Object.prototype.hasOwnProperty.call(headers, name)) {\r\n        xhr.setRequestHeader(name, headers[name]);\r\n      }\r\n    }\r\n    xhr.send();\r\n  };\r\n  \r\n  function HeadersWrapper(headers) {\r\n    this._headers = headers;\r\n  }\r\n  HeadersWrapper.prototype.get = function (name) {\r\n    return this._headers.get(name);\r\n  };\r\n\r\n  function FetchTransport() {\r\n  }\r\n\r\n  FetchTransport.prototype.open = function (xhr, onStartCallback, onProgressCallback, onFinishCallback, url, withCredentials, headers) {\r\n    var controller = new AbortController();\r\n    var signal = controller.signal;// see #120\r\n    var textDecoder = new TextDecoder();\r\n    fetch(url, {\r\n      headers: headers,\r\n      credentials: withCredentials ? \"include\" : \"same-origin\",\r\n      signal: signal,\r\n      cache: \"no-store\"\r\n    }).then(function (response) {\r\n      var reader = response.body.getReader();\r\n      onStartCallback(response.status, response.statusText, response.headers.get(\"Content-Type\"), new HeadersWrapper(response.headers), function () {\r\n        controller.abort();\r\n        reader.cancel();\r\n      });\r\n      return new Promise(function (resolve, reject) {\r\n        var readNextChunk = function () {\r\n          reader.read().then(function (result) {\r\n            if (result.done) {\r\n              //Note: bytes in textDecoder are ignored\r\n              resolve(undefined);\r\n            } else {\r\n              var chunk = textDecoder.decode(result.value, {stream: true});\r\n              onProgressCallback(chunk);\r\n              readNextChunk();\r\n            }\r\n          })[\"catch\"](function (error) {\r\n            reject(error);\r\n          });\r\n        };\r\n        readNextChunk();\r\n      });\r\n    })[\"finally\"](function () {\r\n      onFinishCallback();\r\n    });\r\n  };\r\n\r\n  function EventTarget() {\r\n    this._listeners = Object.create(null);\r\n  }\r\n\r\n  function throwError(e) {\r\n    setTimeout(function () {\r\n      throw e;\r\n    }, 0);\r\n  }\r\n\r\n  EventTarget.prototype.dispatchEvent = function (event) {\r\n    event.target = this;\r\n    var typeListeners = this._listeners[event.type];\r\n    if (typeListeners != undefined) {\r\n      var length = typeListeners.length;\r\n      for (var i = 0; i < length; i += 1) {\r\n        var listener = typeListeners[i];\r\n        try {\r\n          if (typeof listener.handleEvent === \"function\") {\r\n            listener.handleEvent(event);\r\n          } else {\r\n            listener.call(this, event);\r\n          }\r\n        } catch (e) {\r\n          throwError(e);\r\n        }\r\n      }\r\n    }\r\n  };\r\n  EventTarget.prototype.addEventListener = function (type, listener) {\r\n    type = String(type);\r\n    var listeners = this._listeners;\r\n    var typeListeners = listeners[type];\r\n    if (typeListeners == undefined) {\r\n      typeListeners = [];\r\n      listeners[type] = typeListeners;\r\n    }\r\n    var found = false;\r\n    for (var i = 0; i < typeListeners.length; i += 1) {\r\n      if (typeListeners[i] === listener) {\r\n        found = true;\r\n      }\r\n    }\r\n    if (!found) {\r\n      typeListeners.push(listener);\r\n    }\r\n  };\r\n  EventTarget.prototype.removeEventListener = function (type, listener) {\r\n    type = String(type);\r\n    var listeners = this._listeners;\r\n    var typeListeners = listeners[type];\r\n    if (typeListeners != undefined) {\r\n      var filtered = [];\r\n      for (var i = 0; i < typeListeners.length; i += 1) {\r\n        if (typeListeners[i] !== listener) {\r\n          filtered.push(typeListeners[i]);\r\n        }\r\n      }\r\n      if (filtered.length === 0) {\r\n        delete listeners[type];\r\n      } else {\r\n        listeners[type] = filtered;\r\n      }\r\n    }\r\n  };\r\n\r\n  function Event(type) {\r\n    this.type = type;\r\n    this.target = undefined;\r\n  }\r\n\r\n  function MessageEvent(type, options) {\r\n    Event.call(this, type);\r\n    this.data = options.data;\r\n    this.lastEventId = options.lastEventId;\r\n  }\r\n\r\n  MessageEvent.prototype = Object.create(Event.prototype);\r\n\r\n  function ConnectionEvent(type, options) {\r\n    Event.call(this, type);\r\n    this.status = options.status;\r\n    this.statusText = options.statusText;\r\n    this.headers = options.headers;\r\n  }\r\n\r\n  ConnectionEvent.prototype = Object.create(Event.prototype);\r\n\r\n  var WAITING = -1;\r\n  var CONNECTING = 0;\r\n  var OPEN = 1;\r\n  var CLOSED = 2;\r\n\r\n  var AFTER_CR = -1;\r\n  var FIELD_START = 0;\r\n  var FIELD = 1;\r\n  var VALUE_START = 2;\r\n  var VALUE = 3;\r\n\r\n  var contentTypeRegExp = /^text\\/event\\-stream;?(\\s*charset\\=utf\\-8)?$/i;\r\n\r\n  var MINIMUM_DURATION = 1000;\r\n  var MAXIMUM_DURATION = 18000000;\r\n\r\n  var parseDuration = function (value, def) {\r\n    var n = parseInt(value, 10);\r\n    if (n !== n) {\r\n      n = def;\r\n    }\r\n    return clampDuration(n);\r\n  };\r\n  var clampDuration = function (n) {\r\n    return Math.min(Math.max(n, MINIMUM_DURATION), MAXIMUM_DURATION);\r\n  };\r\n\r\n  var fire = function (that, f, event) {\r\n    try {\r\n      if (typeof f === \"function\") {\r\n        f.call(that, event);\r\n      }\r\n    } catch (e) {\r\n      throwError(e);\r\n    }\r\n  };\r\n\r\n  function EventSourcePolyfill(url, options) {\r\n    EventTarget.call(this);\r\n\r\n    this.onopen = undefined;\r\n    this.onmessage = undefined;\r\n    this.onerror = undefined;\r\n\r\n    this.url = undefined;\r\n    this.readyState = undefined;\r\n    this.withCredentials = undefined;\r\n\r\n    this._close = undefined;\r\n\r\n    start(this, url, options);\r\n  }\r\n\r\n  function getBestTransport() {\r\n    return (XMLHttpRequest != undefined && (\"withCredentials\" in XMLHttpRequest.prototype)) || XDomainRequest == undefined\r\n      ? XMLHttpRequest\r\n      : XDomainRequest;\r\n  }\r\n\r\n  var isFetchSupported = fetch != undefined && Response != undefined && \"body\" in Response.prototype;\r\n\r\n  function start(es, url, options) {\r\n    url = String(url);\r\n    var withCredentials = options != undefined && Boolean(options.withCredentials);\r\n\r\n    var initialRetry = clampDuration(1000);\r\n    var heartbeatTimeout = options != undefined && options.heartbeatTimeout != undefined ? parseDuration(options.heartbeatTimeout, 45000) : clampDuration(45000);\r\n\r\n    var lastEventId = \"\";\r\n    var retry = initialRetry;\r\n    var wasActivity = false;\r\n    var headers = options != undefined && options.headers != undefined ? JSON.parse(JSON.stringify(options.headers)) : undefined;\r\n    var CurrentTransport = options != undefined && options.Transport != undefined ? options.Transport : getBestTransport();\r\n    var xhr = isFetchSupported && !(options != undefined && options.Transport != undefined) ? undefined : new XHRWrapper(new CurrentTransport());\r\n    var transport = xhr == undefined ? new FetchTransport() : new XHRTransport();\r\n    var cancelFunction = undefined;\r\n    var timeout = 0;\r\n    var currentState = WAITING;\r\n    var dataBuffer = \"\";\r\n    var lastEventIdBuffer = \"\";\r\n    var eventTypeBuffer = \"\";\r\n\r\n    var textBuffer = \"\";\r\n    var state = FIELD_START;\r\n    var fieldStart = 0;\r\n    var valueStart = 0;\r\n\r\n    var onStart = function (status, statusText, contentType, headers, cancel) {\r\n      if (currentState === CONNECTING) {\r\n        cancelFunction = cancel;\r\n        if (status === 200 && contentType != undefined && contentTypeRegExp.test(contentType)) {\r\n          currentState = OPEN;\r\n          wasActivity = true;\r\n          retry = initialRetry;\r\n          es.readyState = OPEN;\r\n          var event = new ConnectionEvent(\"open\", {\r\n            status: status,\r\n            statusText: statusText,\r\n            headers: headers\r\n          });\r\n          es.dispatchEvent(event);\r\n          fire(es, es.onopen, event);\r\n        } else {\r\n          var message = \"\";\r\n          if (status !== 200) {\r\n            if (statusText) {\r\n              statusText = statusText.replace(/\\s+/g, \" \");\r\n            }\r\n            message = \"EventSource's response has a status \" + status + \" \" + statusText + \" that is not 200. Aborting the connection.\";\r\n          } else {\r\n            message = \"EventSource's response has a Content-Type specifying an unsupported type: \" + (contentType == undefined ? \"-\" : contentType.replace(/\\s+/g, \" \")) + \". Aborting the connection.\";\r\n          }\r\n          throwError(new Error(message));\r\n          close();\r\n          var event = new ConnectionEvent(\"error\", {\r\n            status: status,\r\n            statusText: statusText,\r\n            headers: headers\r\n          });\r\n          es.dispatchEvent(event);\r\n          fire(es, es.onerror, event);\r\n        }\r\n      }\r\n    };\r\n\r\n    var onProgress = function (textChunk) {\r\n      if (currentState === OPEN) {\r\n        var n = -1;\r\n        for (var i = 0; i < textChunk.length; i += 1) {\r\n          var c = textChunk.charCodeAt(i);\r\n          if (c === \"\\n\".charCodeAt(0) || c === \"\\r\".charCodeAt(0)) {\r\n            n = i;\r\n          }\r\n        }\r\n        var chunk = (n !== -1 ? textBuffer : \"\") + textChunk.slice(0, n + 1);\r\n        textBuffer = (n === -1 ? textBuffer : \"\") + textChunk.slice(n + 1);\r\n        if (chunk !== \"\") {\r\n          wasActivity = true;\r\n        }\r\n        for (var position = 0; position < chunk.length; position += 1) {\r\n          var c = chunk.charCodeAt(position);\r\n          if (state === AFTER_CR && c === \"\\n\".charCodeAt(0)) {\r\n            state = FIELD_START;\r\n          } else {\r\n            if (state === AFTER_CR) {\r\n              state = FIELD_START;\r\n            }\r\n            if (c === \"\\r\".charCodeAt(0) || c === \"\\n\".charCodeAt(0)) {\r\n              if (state !== FIELD_START) {\r\n                if (state === FIELD) {\r\n                  valueStart = position + 1;\r\n                }\r\n                var field = chunk.slice(fieldStart, valueStart - 1);\r\n                var value = chunk.slice(valueStart + (valueStart < position && chunk.charCodeAt(valueStart) === \" \".charCodeAt(0) ? 1 : 0), position);\r\n                if (field === \"data\") {\r\n                  dataBuffer += \"\\n\";\r\n                  dataBuffer += value;\r\n                } else if (field === \"id\") {\r\n                  lastEventIdBuffer = value;\r\n                } else if (field === \"event\") {\r\n                  eventTypeBuffer = value;\r\n                } else if (field === \"retry\") {\r\n                  initialRetry = parseDuration(value, initialRetry);\r\n                  retry = initialRetry;\r\n                } else if (field === \"heartbeatTimeout\") {\r\n                  heartbeatTimeout = parseDuration(value, heartbeatTimeout);\r\n                  if (timeout !== 0) {\r\n                    clearTimeout(timeout);\r\n                    timeout = setTimeout(function () {\r\n                      onTimeout();\r\n                    }, heartbeatTimeout);\r\n                  }\r\n                }\r\n              }\r\n              if (state === FIELD_START) {\r\n                if (dataBuffer !== \"\") {\r\n                  lastEventId = lastEventIdBuffer;\r\n                  if (eventTypeBuffer === \"\") {\r\n                    eventTypeBuffer = \"message\";\r\n                  }\r\n                  var event = new MessageEvent(eventTypeBuffer, {\r\n                    data: dataBuffer.slice(1),\r\n                    lastEventId: lastEventIdBuffer\r\n                  });\r\n                  es.dispatchEvent(event);\r\n                  if (eventTypeBuffer === \"message\") {\r\n                    fire(es, es.onmessage, event);\r\n                  }\r\n                  if (currentState === CLOSED) {\r\n                    return;\r\n                  }\r\n                }\r\n                dataBuffer = \"\";\r\n                eventTypeBuffer = \"\";\r\n              }\r\n              state = c === \"\\r\".charCodeAt(0) ? AFTER_CR : FIELD_START;\r\n            } else {\r\n              if (state === FIELD_START) {\r\n                fieldStart = position;\r\n                state = FIELD;\r\n              }\r\n              if (state === FIELD) {\r\n                if (c === \":\".charCodeAt(0)) {\r\n                  valueStart = position + 1;\r\n                  state = VALUE_START;\r\n                }\r\n              } else if (state === VALUE_START) {\r\n                state = VALUE;\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    };\r\n\r\n    var onFinish = function () {\r\n      if (currentState === OPEN || currentState === CONNECTING) {\r\n        currentState = WAITING;\r\n        if (timeout !== 0) {\r\n          clearTimeout(timeout);\r\n          timeout = 0;\r\n        }\r\n        timeout = setTimeout(function () {\r\n          onTimeout();\r\n        }, retry);\r\n        retry = clampDuration(Math.min(initialRetry * 16, retry * 2));\r\n\r\n        es.readyState = CONNECTING;\r\n        var event = new Event(\"error\");\r\n        es.dispatchEvent(event);\r\n        fire(es, es.onerror, event);\r\n      }\r\n    };\r\n\r\n    var close = function () {\r\n      currentState = CLOSED;\r\n      if (cancelFunction != undefined) {\r\n        cancelFunction();\r\n        cancelFunction = undefined;\r\n      }\r\n      if (timeout !== 0) {\r\n        clearTimeout(timeout);\r\n        timeout = 0;\r\n      }\r\n      es.readyState = CLOSED;\r\n    };\r\n\r\n    var onTimeout = function () {\r\n      timeout = 0;\r\n\r\n      if (currentState !== WAITING) {\r\n        if (!wasActivity && cancelFunction != undefined) {\r\n          throwError(new Error(\"No activity within \" + heartbeatTimeout + \" milliseconds. Reconnecting.\"));\r\n          cancelFunction();\r\n          cancelFunction = undefined;\r\n        } else {\r\n          wasActivity = false;\r\n          timeout = setTimeout(function () {\r\n            onTimeout();\r\n          }, heartbeatTimeout);\r\n        }\r\n        return;\r\n      }\r\n\r\n      wasActivity = false;\r\n      timeout = setTimeout(function () {\r\n        onTimeout();\r\n      }, heartbeatTimeout);\r\n\r\n      currentState = CONNECTING;\r\n      dataBuffer = \"\";\r\n      eventTypeBuffer = \"\";\r\n      lastEventIdBuffer = lastEventId;\r\n      textBuffer = \"\";\r\n      fieldStart = 0;\r\n      valueStart = 0;\r\n      state = FIELD_START;\r\n\r\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=428916\r\n      // Request header field Last-Event-ID is not allowed by Access-Control-Allow-Headers.\r\n      var requestURL = url;\r\n      if (url.slice(0, 5) !== \"data:\" && url.slice(0, 5) !== \"blob:\") {\r\n        if (lastEventId !== \"\") {\r\n          requestURL += (url.indexOf(\"?\") === -1 ? \"?\" : \"&\") + \"lastEventId=\" + encodeURIComponent(lastEventId);\r\n        }\r\n      }\r\n      var requestHeaders = {};\r\n      requestHeaders[\"Accept\"] = \"text/event-stream\";\r\n      if (headers != undefined) {\r\n        for (var name in headers) {\r\n          if (Object.prototype.hasOwnProperty.call(headers, name)) {\r\n            requestHeaders[name] = headers[name];\r\n          }\r\n        }\r\n      }\r\n      try {\r\n        transport.open(xhr, onStart, onProgress, onFinish, requestURL, withCredentials, requestHeaders);\r\n      } catch (error) {\r\n        close();\r\n        throw error;\r\n      }\r\n    };\r\n\r\n    es.url = url;\r\n    es.readyState = CONNECTING;\r\n    es.withCredentials = withCredentials;\r\n    es._close = close;\r\n\r\n    onTimeout();\r\n  }\r\n\r\n  EventSourcePolyfill.prototype = Object.create(EventTarget.prototype);\r\n  EventSourcePolyfill.prototype.CONNECTING = CONNECTING;\r\n  EventSourcePolyfill.prototype.OPEN = OPEN;\r\n  EventSourcePolyfill.prototype.CLOSED = CLOSED;\r\n  EventSourcePolyfill.prototype.close = function () {\r\n    this._close();\r\n  };\r\n\r\n  EventSourcePolyfill.CONNECTING = CONNECTING;\r\n  EventSourcePolyfill.OPEN = OPEN;\r\n  EventSourcePolyfill.CLOSED = CLOSED;\r\n  EventSourcePolyfill.prototype.withCredentials = undefined;\r\n\r\n  (function (factory) {\r\n    if (typeof module === \"object\" && typeof module.exports === \"object\") {\r\n      var v = factory(exports);\r\n      if (v !== undefined) module.exports = v;\r\n    }\r\n    else if (typeof define === \"function\" && define.amd) {\r\n      define([\"exports\"], factory);\r\n    }\r\n    else {\r\n      factory(global);\r\n    }\r\n  })(function (exports) {\r\n    exports.EventSourcePolyfill = EventSourcePolyfill;\r\n    exports.NativeEventSource = NativeEventSource;\r\n    if (XMLHttpRequest != undefined && (NativeEventSource == undefined || !(\"withCredentials\" in NativeEventSource.prototype))) {\r\n      // Why replace a native EventSource ?\r\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=444328\r\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=831392\r\n      // https://code.google.com/p/chromium/issues/detail?id=260144\r\n      // https://code.google.com/p/chromium/issues/detail?id=225654\r\n      // ...\r\n      exports.EventSource = EventSourcePolyfill;\r\n    }\r\n  });\r\n}(typeof window !== 'undefined' ? window : this));\r\n"],"sourceRoot":""}