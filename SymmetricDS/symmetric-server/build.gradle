apply from: symAssembleDir + '/common.gradle'
apply from: symAssembleDir + '/asciidoc.gradle'

    description = 'SymmetricDS Server library for JDBC client'

    apply plugin: 'distribution'

    dependencies {
        compile project(":symmetric-client")
        compile "javax.mail:mail:1.4.5"
        compile "org.springframework:spring-jms:$springVersion"
        compile "org.springframework:spring-web:$springVersion"
        compile "org.springframework:spring-webmvc:$springVersion" // This was is enture that swagger-springmvc picks up the matching Spring version.
        compile "javax.xml.bind:jaxb-api:2.2.7"
        compile "org.codehaus.jackson:jackson-mapper-asl:1.9.9"
        compile "org.jdom:jdom:1.1"
        compile ("com.mangofactory:swagger-springmvc:0.6.5") {
            exclude group: 'asm'
        }
        compile project(":symmetric-wrapper")

        provided "javax.jms:jms-api:1.1-rev-1"
        provided "org.mongodb:mongo-java-driver:2.12.3"
        provided "org.codehaus.mojo:animal-sniffer-annotations:$animalSnifferVersion"
        
        compile "javax.servlet:javax.servlet-api:$servletVersion"
        provided "org.eclipse.jetty:jetty-annotations:$jettyVersion"
        provided "org.eclipse.jetty:jetty-servlets:$jettyVersion"
        provided "org.eclipse.jetty:jetty-webapp:$jettyVersion"
        provided "org.eclipse.jetty:jetty-jmx:$jettyVersion"
        provided "javax.websocket:javax.websocket-api:1.1"
        provided "org.eclipse.jetty.websocket:javax-websocket-server-impl:$jettyVersion"        
        provided "mx4j:mx4j-tools:3.0.1"

        testCompile project(path: ':symmetric-util', configuration: 'testArtifacts')
        testCompile project(path: ':symmetric-io', configuration: 'testArtifacts')
        testCompile project(path: ':symmetric-jdbc', configuration: 'testArtifacts')
        testCompile project(path: ':symmetric-core', configuration: 'testArtifacts')
        testCompile project(path: ':symmetric-client', configuration: 'testArtifacts')
    }

    distributions {
        server {
            baseName = 'symmetric-server'
            contents {
                from { 'COPYING' }
                from { 'CREDITS' }
                from { 'NOTICE' }
                from ('src/main/deploy') {
                    exclude 'bin/sym'
                    exclude 'bin/symadmin'
                    exclude 'bin/dbexport'
                    exclude 'bin/dbimport'
                    exclude 'bin/dbfill'
                    exclude 'bin/jmx'
                    exclude 'bin/dbsql'
                    exclude 'bin/dbcompare'
                    exclude 'bin/sym_service'
                    exclude 'bin/setenv'
                }
                from ('src/main/deploy') {
                    include 'bin/sym'
                    include 'bin/symadmin'
                    include 'bin/dbexport'
                    include 'bin/dbimport'
                    include 'bin/dbfill'
                    include 'bin/jmx'
                    include 'bin/dbsql'
                    include 'bin/dbcompare'
                    include 'bin/sym_service'
                    include 'bin/setenv'
                    fileMode 0755
                }
                into('doc') { from ("$symAssembleDir/build/doc") }
                into('lib') {
                    from project(":symmetric-wrapper").configurations.compile {
                        include "*jna*"
                    }
                }
                into('lib') {
                    from configurations.provided { exclude "*animal-sniffer*" }
                    from project(":symmetric-wrapper").jar
                    rename 'symmetric-wrapper(.*).jar', 'symmetric-wrapper.jar'
                }
                into('web/WEB-INF/lib') {
                    from project(":symmetric-server").jar
                    from configurations.compile.filter {  a ->
                        !a.path.contains("symmetric-wrapper") &&
                                !configurations.provided.contains(a) &&
                                !project(':symmetric-server').configurations.provided.contains(a)
                    }
                }
            }
        }
    }
    
    
    serverDistZip.dependsOn { ':symmetric-server:jar' }
    serverDistZip.dependsOn { ':symmetric-server:generateDocs' }
    generateAppendixes.dependsOn(project(':symmetric-server').jar)